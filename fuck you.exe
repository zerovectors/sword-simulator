-- ui library creation
local hintmsg = Instance.new("Hint", game.CoreGui)
local attempt = tick()
hintmsg.Text = "Initializing UI Library This Can Take Up To 30 Seconds"
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/framework/master/vect0rs%20hub%20framework%20uwuware%20checkmarks", true))()
local version = "1.1"
local uiname = "Sword Simulator 2"
local ui = { }
local main = { }
local loopfunctions = { }
local loops = { }
function GetCamera()
	return workspace:FindFirstChildOfClass("Camera")
end
local mouse = game.Players.LocalPlayer:GetMouse()
local TweenService = game:GetService("TweenService")
local Plrs = game.Players
local MyPlr = Plrs.LocalPlayer
local MyCam = GetCamera()
local char = game.Players.LocalPlayer.Character
local Plrs = game:GetService("Players")
local Run = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local PlayerGui = game.Players.LocalPlayer.PlayerGui
local StartGui = game:GetService("StarterGui")
local Teams = game:GetService("Teams")
local g = MyPlr:FindFirstChild("PlayerGui") or MyPlr:WaitForChild("PlayerGui")
local sg = game:GetService("StarterGui")
local ps = game:GetService("Players")
local Light = game:GetService("Lighting")
local HTTP = game:GetService("HttpService")
local UserInput = game:GetService("UserInputService")
local messages_of_the_day = nil

game:GetService("ScriptContext").Error:Connect(function(message)
	print("Reason: "..message)
	if message == "HttpError: ConnectFail" then
        MyPlr:Kick("Initializing Failed; Code 3 | ReJoin")
    elseif message == "attempt to index nil with 'CreateWindow'" then
        MyPlr:Kick("Initializing Failed; Code 4 | ReJoin")
	end
end)
do -- loop functions 
    function loopfunctions:LoopRunning(name)
		return loops[name].Running
	end
	function loopfunctions:CreateLoop(name, func, waitt, ...)
		if loops[name] ~= nil then return end
		loops[name] = { }
		loops[name].Running = false
		loops[name].Destroy = false
		loops[name].Loop = coroutine.create(function(...)
			while true do
				if loops[name].Running then
					func(...)
				end

				if loops[name].Destroy then
					break
				end

				if type(wait) == "userdata" then
					waitt:wait()
				else
					wait(waitt)
				end
			end
		end)
	end
	function loopfunctions:RunLoop(name, func, waitt, ...)
		if loops[name] == nil then
			if func ~= nil then
				self:CreateLoop(name, func, waitt, ...)
			end
		end

		loops[name].Running = true
		local succ, out = coroutine.resume(loops[name].Loop)
		if not succ then
			warn("Loop: " .. tostring(name) .. " ERROR: " .. tostring(out))
		end
	end
	function loopfunctions:StopLoop(name)
		if loops[name] == nil then return end

		loops[name].Running = false
	end
	function loopfunctions:DestroyLoop(name)
		if loops[name] == nil then return end

		self:StopLoop(name)
		loops[name].Destroy = true

		loops[name] = nil
	end
end
do -- loops
    loopfunctions:RunLoop("Version_Check", function()
        local data = loadstring(game:HttpGet("https://pastebin.com/raw/MhwMYaFu", true))()
        messages_of_the_day = data.messages_of_the_day
        data = data["Sword Simulator 2"]
        local current_version, reason = data.version, data.reason
        if version ~= current_version then
            if data.force_kick then
                MyPlr:Kick("This script has updated, please re-connect. Current Version: " .. tostring(current_version) .. " your version: " .. version .. "\nReason: " .. reason)
            else
                library:SendNotification("Minor script update, restart ROBLOX to get latest version. Reason:" .. reason)
                main:SystemChat("Minor script update, restart ROBLOX to get latest version. Reason:" .. reason)
            end
        end
    end, 160)
    loopfunctions:CreateLoop("Stat Updater", function()
        ui.miscellaneous.stats:SetState("Power; "..MyPlr.leaderstats.Power.Value)
    end, Run.RenderStepped)
    loopfunctions:RunLoop("KillAll", function()
        for i,v in pairs(game.Players:GetChildren()) do
            if v.leaderstats.Power.Value <= game.Players.LocalPlayer.leaderstats.Power.Value then
                pcall(function()
                    while game.Players.LocalPlayer.Character.Humanoid.Health > v.Character.Humanoid.Health and v.Character.Humanoid.Health >= 1 do
                        if library.flags.killall then
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame
                            for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                                if v:IsA("Tool") then
                                    v:Activate()
                                end
                            end
                        end
                        wait()
                    end
                end)
            end
        end
    end, Run.RenderStepped)
end
do -- main
    main.espsettings = {
        TracersLength = 500;
        CHAMSLength = 500;
        ESPLength = 10000;
        Blacklist = { };
        FriendList = { };
        Colors = {
            Enemy = Color3.fromRGB(221, 3, 255);
            Ally = Color3.fromRGB(255, 51, 255);
            Friend = Color3.fromRGB(255, 51, 255);
            Neutral = Color3.fromRGB(255,255,255);
            ColorOverride = nil;
        };
        CharAddedEvent = { };
        Mob_ESP_CHAMS_Ran_Once = false;
    };
    main.Arguments = { };
    main.swordamount = 0;
    main.VelCap = 5;
    main.JumpBoostAmt = 0.1;
    if main.espsettings.CHAMSLength > 2048 then
        main.espsettings.CHAMSLength = 2048
    end;
    if main.espsettings.TracersLength > 2048 then
        main.espsettings.TracersLength = 2048
    end;
    splitline = Instance.new("Frame")
    main.ESPFolder = Instance.new("Folder", CoreGui)
    main.ESPFolder.Name = "ESP Stuff"
    main.ItemChams = Instance.new("Folder", main.ChamsFolder);
    main.ItemChams.Name = "ItemChams";
    main.Tracers = Instance.new("Folder", MyCam);
    main.Tracers.Name = "Tracers";
    main.PlayerESP = Instance.new("Folder", main.ESPFolder)
    main.PlayerESP.Name = "PlayerESP"
    main.ChamsFolder = Instance.new("Folder", CoreGui);
    main.ChamsFolder.Name = "Chams";
    main.ItemESP = Instance.new("Folder", main.ESPFolder)
    main.ItemESP.Name = "ItemESP"
    main.PlayerChams = Instance.new("Folder", main.ChamsFolder);
    main.PlayerChams.Name = "PlayerChams";
	main.TracerData = { };
	main.TracerMT = setmetatable(main.TracerData, {
		__newindex = function(tab, index, val)
			rawset(tab, index, val)
		end
    });
    main.vflyspeed = 1;
    main.vehicleflyspeed = 1;
    function main:Console(text)
        hintmsg.Text = text
    end
    function main:SystemChat(txt)
        sg:SetCore("ChatMakeSystemMessage",
        {
            Text = "Vect0rs; ".. txt,
            Color = Color3.new(248, 118, 37),
            Font = Enum.Font.Cartoon,
            TextSize = 18
        })
        local msg = g.Chat:GetDescendants()
        repeat
            for i, v in next, msg do
                if v:IsA("TextLabel") or v:IsA("TextButton") then
                    if v.Text == "Vect0rs; ".. txt then
                        msg = v
                    end
                end
            end
            Run.RenderStepped:wait()
        until type(msg) ~= "table"
        local n = 0
        spawn(function()
            while msg.Text == "Vect0rs; " .. txt do
                msg.TextColor3 = Color3.fromHSV(n, 0.4, 1)
                n = (n + 0.01) % 1
                Run.RenderStepped:wait()
            end
        end)
    end
    function main:SaveSettings()
        local Name = "Vect0rs Hub/Vect0rshub.evelynn"
        local Settings
        if not pcall(function() readfile(Name) end) then makefolder("Vect0rs Hub") writefile(Name, game:service'HttpService':JSONEncode(library.flags)) end
        Settings = game:service'HttpService':JSONDecode(readfile(Name))
        local function Save()
        writefile(Name,game:service'HttpService':JSONEncode(Settings))
        end
        do -- visuals
            Settings.FullBright = library.flags.FullBright
            Settings.espfoldertog = library.flags.espfoldertog
            Settings.ESPTog = library.flags.ESPTog
            Settings.ChamsTog = library.flags.ChamsTog
            Settings.TracersTog = library.flags.TracersTog
        end
        do -- character
            Settings.SuperSpeed = library.flags.SuperSpeed
            Settings.SuperJump = library.flags.SuperJump
            Settings.flytog = library.flags.flytog
            Settings.vflytog = library.flags.vflytog
            Settings.characterhaxmain = library.flags.characterhaxmain
        end
        do -- miscellaneous
            Settings.lowgrav = library.flags.lowgrav
        end
        do -- ui settings
            Settings.annoyshit = library.flags.annoyshit
            Settings.CursorTog = library.flags.CursorTog
            Settings.watermark = library.flags.watermark
        end
        Save()
    end
    function main:LoadSettings()
        local Name = "Vect0rs Hub/Vect0rshub.evelynn"
        local Settings
        if not pcall(function() readfile(Name) end) then makefolder("Vect0rs Hub") writefile(Name, game:service'HttpService':JSONEncode(library.flags)) end
        Settings = game:service'HttpService':JSONDecode(readfile(Name))
        do -- visuals
            ui.visuals.fullbright:SetState(Settings.FullBright)
            ui.visuals.espmain:SetState(Settings.espfoldertog)
            ui.visuals.esp:SetState(Settings.ESPTog)
            ui.visuals.chams:SetState(Settings.ChamsTog)
            ui.visuals.tracers:SetState(Settings.TracersTog)
        end
        do -- character
            ui.character.charactermain:SetState(Settings.characterhaxmain)
            ui.character.superspeed:SetState(Settings.SuperSpeed)
            ui.character.superjump:SetState(Settings.SuperJump)
            ui.character.flymain:SetState(Settings.flytog)
            ui.character.vehiclefly:SetState(Settings.vflytog)
        end
        do -- miscellaneous
            ui.miscellaneous.lowgravity:SetState(Settings.lowgrav)
        end
        do -- ui settings
            main.uisettings.annoyingstuff:SetState(Settings.annoyshit)
            main.uisettings.cursor:SetState(Settings.CursorTog)
            main.uisettings.watermark:SetState(Settings.watermark)
        end
    end
    function main:AutoLoadSettings()
        local Name = "Vect0rs Hub/Vect0rshub.evelynn"
        local Settings
        if not pcall(function() readfile(Name) end) then makefolder("Vect0rs Hub") writefile(Name, game:service'HttpService':JSONEncode(library.flags)) end
        Settings = game:service'HttpService':JSONDecode(readfile(Name))
        game.CoreGui.uwuware.watermark.Text.MouseButton1Down:Connect(function()
            main:LoadSettings()
        end)
    end
    function main:fullbright()
        if library.flags.FullBright then
            local bloom = Instance.new("BloomEffect");
            bloom.Enabled = true;
            bloom.Intensity = 0.55;
            bloom.Size = 30;
            bloom.Threshold = 0.95;
            bloom.Parent = game.Lighting;
            local colorcorrection = Instance.new("ColorCorrectionEffect");
            colorcorrection.Enabled = true;
            colorcorrection.Brightness = 0;
            colorcorrection.Contrast = 0;
            colorcorrection.Saturation = 1;
            colorcorrection.TintColor = Color3.fromRGB(255,255,255);
            colorcorrection.Parent = game.Lighting;
            local sunrays = Instance.new("SunRaysEffect");
            sunrays.Enabled = true;
            sunrays.Intensity = 0.4;
            sunrays.Spread = 1;
            sunrays.Parent = game.Lighting;
        else
            for i,v in pairs(game.Lighting:GetChildren()) do
                if v:IsA("BloomEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("SunRaysEffect") then
                    v:Destroy();
                end
            end
        end
    end
    function main:GetSizeOfObject(Obj)
        if Obj:IsA("BasePart") then
            return Obj.Size
        elseif Obj:IsA("Model") then
            return Obj:GetExtentsSize()
        end
    end
    function main:GetTeamColor(Plr)
        if Plr == nil then return nil end
        if not Plr:IsA("Player") then
            return nil
        end
        local PickedColor = main.espsettings.Colors.Enemy
        if Plr ~= nil then
            if game.PlaceId == 606849621 then
                if main.espsettings.Colors.ColorOverride == nil then
                    if not library.flags["FreeForAll"] then
                        if MyPlr.Team ~= nil and Plr.Team ~= nil then
                            if main.FriendList[Plr.Name] == nil then
                                if MyPlr.Team.Name == "Prisoner" then
                                    if Plr.Team == MyPlr.Team or Plr.Team.Name == "Criminal" then
                                        PickedColor = main.espsettings.Colors.Ally
                                    else
                                        PickedColor = main.espsettings.Colors.Enemy
                                    end
                                elseif MyPlr.Team.Name == "Criminal" then
                                    if Plr.Team == MyPlr.Team or Plr.Team.Name == "Prisoner" then
                                        PickedColor = main.espsettings.Colors.Ally
                                    else
                                        PickedColor = main.espsettings.Colors.Enemy
                                    end
                                elseif MyPlr.Team.Name == "Police" then
                                    if Plr.Team == MyPlr.Team then
                                        PickedColor = main.espsettings.Colors.Ally
                                    else
                                        if Plr.Team.Name == "Criminal" then
                                            PickedColor = main.espsettings.Colors.Enemy
                                        elseif Plr.Team.Name == "Prisoner" then
                                            PickedColor = main.espsettings.Colors.Neutral
                                        end
                                    end
                                end
                            else
                                PickedColor = main.espsettings.Colors.Friend
                            end
                        end
                    else
                        if main.FriendList[Plr.Name] ~= nil then
                            PickedColor = main.espsettings.Colors.Friend
                        else
                            PickedColor = main.espsettings.Colors.Enemy
                        end
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            elseif game.PlaceId == 155615604 then
                if main.espsettings.Colors.ColorOverride == nil then
                    if MyPlr.Team ~= nil and Plr.Team ~= nil then
                        if main.espsettings.FriendList[Plr.Name] == nil then
                            if MyPlr.Team.Name == "Inmates" then
                                if Plr.Team.Name == "Inmates" then
                                    PickedColor = main.espsettings.Colors.Ally
                                elseif Plr.Team.Name == "Guards" or Plr.Team.Name == "Criminals" then
                                    PickedColor = main.espsettings.Colors.Enemy
                                else
                                    PickedColor = main.espsettings.Colors.Neutral
                                end
                            elseif MyPlr.Team.Name == "Guards" then
                                if Plr.Team.Name == "Inmates" then
                                    PickedColor = main.espsettings.Colors.Neutral
                                elseif Plr.Team.Name == "Criminals" then
                                    PickedColor = main.espsettings.Colors.Enemy
                                elseif Plr.Team.Name == "Guards" then
                                    PickColor = main.espsettings.Colors.Ally
                                end
                            elseif MyPlr.Team.Name == "Criminals" then
                                if Plr.Team.Name == "Inmates" then
                                    PickedColor = main.espsettings.Colors.Ally
                                elseif Plr.Team.Name == "Guards" then
                                    PickedColor = main.espsettings.Colors.Enemy
                                else
                                    PickedColor = main.espsettings.Colors.Neutral
                                end
                            end
                        else
                            PickedColor = main.espsettings.Colors.Friend
                        end
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            elseif game.PlaceId == 746820961 then
                if main.espsettings.Colors.ColorOverride == nil then
                    if MyPlr:FindFirstChild("TeamC") and Plr:FindFirstChild("TeamC") then
                        if Plr.TeamC.Value == MyPlr.TeamC.Value then
                            PickedColor = main.espsettings.Colors.Ally
                        else
                            PickedColor = main.espsettings.Colors.Enemy
                        end
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            elseif game.PlaceId == 1382113806 then
                if main.espsettings.Colors.ColorOverride == nil then
                    if MyPlr:FindFirstChild("role") and Plr:FindFirstChild("role") then
                        if MyPlr.role.Value == "assassin" then
                            if Plr.role.Value == "target" then
                                PickedColor = main.espsettings.Colors.Enemy
                            elseif Plr.role.Value == "guard" then
                                PickedColor = Color3.new(1, 135 / 255, 0)
                            else
                                PickedColor = main.espsettings.Colors.Neutral
                            end
                        elseif MyPlr.role.Value == "target" then
                            if Plr.role.Value == "guard" then
                                PickedColor = main.espsettings.Colors.Ally
                            elseif Plr.role.Value == "assassin" then
                                PickedColor = main.espsettings.Colors.Enemy
                            else
                                PickedColor = main.espsettings.Colors.Neutral
                            end
                        elseif MyPlr.role.Value == "guard" then
                            if Plr.role.Value == "target" then
                                PickedColor = main.espsettings.Colors.Friend
                            elseif Plr.role.Value == "guard" then
                                PickedColor = main.espsettings.Colors.Ally
                            elseif Plr.role.Value == "assassin" then
                                PickedColor = main.espsettings.Colors.Enemy
                            else
                                PickedColor = main.espsettings.Colors.Neutral
                            end
                        else
                            if MyPlr.role.Value == "none" then
                                PickedColor = main.espsettings.Colors.Neutral
                            end
                        end
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            elseif game.PlaceId == 1072809192 then
                if MyPlr:FindFirstChild("Backpack") and Plr:FindFirstChild("Backpack") then
                    if MyPlr.Backpack:FindFirstChild("Knife") or game.Players.LocalPlayer.Character:FindFirstChild("Knife") then
                        if Plr.Backpack:FindFirstChild("Revolver") or Plr.Character:FindFirstChild("Revolver") then
                            PickedColor = main.espsettings.Colors.Enemy
                        else
                            PickedColor = Color3.new(1, 135 / 255, 0)
                        end
                    elseif MyPlr.Backpack:FindFirstChild("Revolver") or game.Players.LocalPlayer.Character:FindFirstChild("Revolver") then
                        if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
                            PickedColor = main.espsettings.Colors.Enemy
                        elseif Plr.Backpack:FindFirstChild("Revolver") or Plr.Character:FindFirstChild("Revolver") then
                            PickedColor = main.espsettings.Colors.Enemy
                        else
                            PickedColor = main.espsettings.Colors.Ally
                        end
                    else
                        if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
                            PickedColor = main.espsettings.Colors.Enemy
                        elseif Plr.Backpack:FindFirstChild("Revolver") or Plr.Character:FindFirstChild("Revolver") then
                            PickedColor = main.espsettings.Colors.Ally
                        else
                            PickedColor = main.espsettings.Colors.Neutral
                        end
                    end
                end
            elseif game.PlaceId == 142823291 or game.PlaceId == 1122507250 then
                if MyPlr:FindFirstChild("Backpack") and Plr:FindFirstChild("Backpack") then
                    if MyPlr.Backpack:FindFirstChild("Knife") or game.Players.LocalPlayer.Character:FindFirstChild("Knife") then
                        if (Plr.Backpack:FindFirstChild("Gun") or Plr.Backpack:FindFirstChild("Revolver")) or (Plr.Character:FindFirstChild("Gun") or Plr.Character:FindFirstChild("Revolver")) then
                            PickedColor = main.espsettings.Colors.Enemy
                        else
                            PickedColor = Color3.new(1, 135 / 255, 0)
                        end
                    elseif (MyPlr.Backpack:FindFirstChild("Gun") or MyPlr.Backpack:FindFirstChild("Revolver")) or (game.Players.LocalPlayer.Character:FindFirstChild("Gun") or game.Players.LocalPlayer.Character:FindFirstChild("Revolver")) then
                        if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
                            PickedColor = main.espsettings.Colors.Enemy
                        else
                            PickedColor = main.espsettings.Colors.Ally
                        end
                    else
                        if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
                            PickedColor = main.espsettings.Colors.Enemy
                        elseif (Plr.Backpack:FindFirstChild("Gun") or Plr.Backpack:FindFirstChild("Revolver")) or (Plr.Character:FindFirstChild("Gun") or Plr.Character:FindFirstChild("Revolver")) then
                            PickedColor = main.espsettings.Colors.Ally
                        else
                            PickedColor = main.espsettings.Colors.Neutral
                        end
                    end
                end
            elseif game.PlaceId == 379614936 then
                if main.espsettings.Colors.ColorOverride == nil then
                    if not main.espsettings.FriendList[Plr.Name] then
                        local targ = MyPlr:FindFirstChild("PlayerGui"):FindFirstChild("ScreenGui"):FindFirstChild("UI"):FindFirstChild("Target"):FindFirstChild("Img"):FindFirstChild("PlayerText")
                        if targ then
                            if Plr.Name:lower() == targ.Text:lower() then
                                PickedColor = main.espsettings.Colors.Enemy
                            else
                                PickedColor = main.espsettings.Colors.Neutral
                            end
                        else
                            PickedColor = main.espsettings.Colors.Neutral
                        end
                    else
                        PickedColor = main.espsettings.Colors.Friend
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            elseif game.PlaceId == 983224898 then
                if (tick() - wildrevolvertick) > 10 or wildrevolverteamdata == nil then
                    wildrevolverteamdata = RepStor.Functions.RequestGameData:InvokeServer()
                    wildrevolvertick = tick()
                    return main.espsettings.Colors.Neutral
                end
                local succ = pcall(function()
                    if wildrevolverteamdata[Plr.Name] ~= nil then
                        if main.espsettings.Colors.ColorOverride == nil then
                            if not main.espsettings.FriendList[Plr.Name] then
                                if wildrevolverteamdata[Plr.Name]["TeamName"] == wildrevolverteamdata[MyPlr.Name]["TeamName"] then
                                    PickedColor = main.espsettings.Colors.Ally
                                else
                                    PickedColor = main.espsettings.Colors.Enemy
                                end
                            else
                                PickedColor = main.espsettings.Colors.Friend
                            end
                        else
                            PickedColor = main.espsettings.Colors.ColorOverride
                        end
                    else
                        PickedColor = main.espsettings.Colors.Neutral
                    end
                end)
                if not succ then
                    wildrevolverteamdata = RepStor.Functions.RequestGameData:InvokeServer()
                    wildrevolvertick = tick()
                    return main.espsettings.Colors.Neutral
                end
            else
                if main.espsettings.Colors.ColorOverride == nil then
                    if not library.flags["FreeForAll"] then
                        if MyPlr.Team ~= Plr.Team and not main.espsettings.FriendList[Plr.Name] then
                            PickedColor = main.espsettings.Colors.Enemy
                        elseif MyPlr.Team == Plr.Team and not main.espsettings.FriendList[Plr.Name] then
                            PickedColor = main.espsettings.Colors.Ally
                        else
                            PickedColor = main.espsettings.Colors.Friend
                        end
                    else
                        if main.espsettings.FriendList[Plr.Name] ~= nil then
                            PickedColor = main.espsettings.Colors.Friend
                        else
                            PickedColor = main.espsettings.Colors.Enemy
                        end
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            end
        end
        return PickedColor
    end
    function main:CreateESP(Obj)
        if Obj ~= nil then
            local IsPlr = Obj:IsA("Player")
            local UseFolder = main.ItemESP
            local GetChar = ((IsPlr) and Obj.Character) or Obj
            local Head = GetChar:FindFirstChild("Head")
            local t = tick()
            if IsPlr then UseFolder = main.PlayerESP end
            if Head == nil then
                repeat
                    Head = GetChar:FindFirstChild("Head")
                    wait()
                until Head ~= nil or (tick() - t) >= 10
            end
            if Head == nil then return end
            
            local bb = Instance.new("BillboardGui")
            bb.Adornee = Head
            bb.ExtentsOffset = Vector3.new(0, 1, 0)
            bb.AlwaysOnTop = true
            bb.Size = UDim2.new(0, 5, 0, 5)
            bb.StudsOffset = Vector3.new(0, 3, 0)
            bb.Name = "ESP Crap_" .. Obj.Name
            bb.Parent = UseFolder
            
            local frame = Instance.new("Frame", bb)
            frame.ZIndex = 10
            frame.BackgroundTransparency = 1
            frame.Size = UDim2.new(1, 0, 1, 0)
            
            local TxtName = Instance.new("TextLabel", frame)
            TxtName.Name = "Names"
            TxtName.ZIndex = 10
            TxtName.Text = Obj.Name
            TxtName.BackgroundTransparency = 1
            TxtName.Position = UDim2.new(0, 0, 0, -45)
            TxtName.Size = UDim2.new(1, 0, 10, 0)
            TxtName.Font = "SourceSansBold"
            TxtName.TextSize = 13
            TxtName.TextStrokeTransparency = 0.5
  
            local TxtDist = nil
            local TxtHealth = nil
            if IsPlr then
                TxtDist = Instance.new("TextLabel", frame)
                TxtDist.Name = "Dist"
                TxtDist.ZIndex = 10
                TxtDist.Text = ""
                TxtDist.BackgroundTransparency = 1
                TxtDist.Position = UDim2.new(0, 0, 0, -35)
                TxtDist.Size = UDim2.new(1, 0, 10, 0)
                TxtDist.Font = "SourceSansBold"
                TxtDist.TextSize = 13
                TxtDist.TextStrokeTransparency = 0.5
  
                TxtHealth = Instance.new("TextLabel", frame)
                TxtHealth.Name = "Health"
                TxtHealth.ZIndex = 10
                TxtHealth.Text = ""
                TxtHealth.BackgroundTransparency = 1
                TxtHealth.Position = UDim2.new(0, 0, 0, -25)
                TxtHealth.Size = UDim2.new(1, 0, 10, 0)
                TxtHealth.Font = "SourceSansBold"
                TxtHealth.TextSize = 13
                TxtHealth.TextStrokeTransparency = 0.5
            else
                local ObjVal = Instance.new("ObjectValue", bb)
                ObjVal.Value = Obj
            end
            
            local PickColor = main:GetTeamColor(Obj) or main.espsettings.Colors.Neutral
            TxtName.TextColor3 = PickColor
  
            if IsPlr then
                TxtDist.TextColor3 = PickColor
                TxtHealth.TextColor3 = PickColor
            end
        end
    end
    function main:RemoveESP(Obj)
        if Obj ~= nil then
            local IsPlr = Obj:IsA("Player")
            local UseFolder = main.ItemESP
            if IsPlr then UseFolder = main.PlayerESP end
            local FindESP = ((IsPlr) and UseFolder:FindFirstChild("ESP Crap_" .. Obj.Name)) or main:FindESP(Obj)
            if FindESP then
                FindESP:Destroy()
            end
        end
    end
    function main:UpdateESP(Plr)
        if Plr ~= nil then
            local Find = main.PlayerESP:FindFirstChild("ESP Crap_" .. Plr.Name)
            if Find then
                local PickColor = main:GetTeamColor(Plr)
                Find.Frame.Names.TextColor3 = PickColor
                Find.Frame.Dist.TextColor3 = PickColor
                Find.Frame.Health.TextColor3 = PickColor
                --Find.Frame.Pos.TextColor3 = PickColor
                local GetChar = Plr.Character
                if game.Players.LocalPlayer.Character and GetChar then
                    local Find2 = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                    local Find3 = GetChar:FindFirstChild("HumanoidRootPart")
                    local Find4 = GetChar:FindFirstChildOfClass("Humanoid")
                    if Find2 and Find3 then
                        local pos = Find3.Position
                        local Dist = (Find2.Position - pos).magnitude
                        if Dist > main.espsettings.ESPLength or main.espsettings.Blacklist[Plr.Name] then
                            Find.Frame.Names.Visible = false
                            Find.Frame.Dist.Visible = false
                            Find.Frame.Health.Visible = false
                            return
                        else
                            Find.Frame.Names.Visible = true
                            Find.Frame.Dist.Visible = true
                            Find.Frame.Health.Visible = true
                        end
                        Find.Frame.Dist.Text = "Distance: " .. string.format("%.0f", Dist)
                        --Find.Frame.Pos.Text = "(X: " .. string.format("%.0f", pos.X) .. ", Y: " .. string.format("%.0f", pos.Y) .. ", Z: " .. string.format("%.0f", pos.Z) .. ")"
                        if Find4 then
                            Find.Frame.Health.Text = "Health: " .. string.format("%.0f", Find4.Health)
                        else
                            Find.Frame.Health.Text = ""
                        end
                    end
                end
            end
        end
    end
    function main:FindESP(Obj)
        for i, v in next, main.ItemESP:GetChildren() do
            if v.className == "ObjectValue" then
                if v.Value == Obj then
                    return v.Parent
                end
            end
        end
        return nil
    end
    function main:FindCham(Obj)
        for i, v in next, main.ItemChams:GetChildren() do
            if v.className == "ObjectValue" then
                if v.Value == Obj then
                    return v.Parent
                end
            end
        end
        return nil
    end
    function main:UpdateChams(Obj)
        if Obj == nil then return end

        if Obj:IsA("Player") then
            local Find = PlayerChams:FindFirstChild(Obj.Name)
            local GetChar = Obj.Character
  
            local Trans = 0
            if GetChar and game.Players.LocalPlayer.Character then
                local GetHead = GetChar:FindFirstChild("Head")
                local GetTor = GetChar:FindFirstChild("HumanoidRootPart")
                local MyHead = game.Players.LocalPlayer.Character:FindFirstChild("Head")
                local MyTor = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                if GetHead and GetTor and MyHead and MyTor then
                    if (MyTor.Position - GetTor.Position).magnitude > settings.CHAMSLength or settings.Blacklist[Obj.Name] then
                        Trans = 1
                    else
                        --local game.Players.LocalPlayer.CharacterStuff = game.Players.LocalPlayer.Character:GetDescendants()
                        local Ray = Ray.new(MyCam.CFrame.p, (GetTor.Position - MyCam.CFrame.p).unit * 2048)
                        local part = workspace:FindPartOnRayWithIgnoreList(Ray, {game.Players.LocalPlayer.Character})
                        if part ~= nil then
                            if part:IsDescendantOf(GetChar) then
                                Trans = 0.9
                            else
                                Trans = 0
                            end
                        end
                    end
                end
            end
  
            if Find then
                for i, v in next, Find:GetChildren() do
                    if v.className ~= "ObjectValue" then
                        v.Color3 = main.GetTeamColor(Obj) or main.espsettings.Colors.Neutral
                        v.Transparency = Trans
                    end
                end
            end
        end
    end
    function main:RemoveChams(Obj)
        if Obj ~= nil then
            local IsPlr = Obj:IsA("Player")
            local UseFolder = main.ItemChams
            if IsPlr then UseFolder = main.PlayerChams end
            local FindC = UseFolder:FindFirstChild(tostring(Obj)) or main:FindCham(Obj)
            if FindC then
                FindC:Destroy()
            end
        end
    end
    function main:CreateChams(Obj)
        if Obj ~= nil then
            local IsPlr = Obj:IsA("Player")
            local UseFolder = main.ItemChams
            local Crap = nil
            local GetTor = nil
            local t = tick()
            if IsPlr then
                Obj = Obj.Character
                UseFolder = main.PlayerChams
            end
            if Obj == nil then return end
            GetTor = Obj:FindFirstChild("HumanoidRootPart") or Obj:WaitForChild("HumanoidRootPart")
            if IsPlr then Crap = Obj:GetChildren() else Crap = Obj:GetDescendants() end
  
            local FindC = ((IsPlr) and UseFolder:FindFirstChild(Obj.Name)) or main:FindCham(Obj)
            if not FindC then
                FindC = Instance.new("Folder", UseFolder)
                FindC.Name = Obj.Name
                local ObjVal = Instance.new("ObjectValue", FindC)
                ObjVal.Value = Obj
            end
  
            for _, P in next, Crap do
                if P:IsA("PVInstance") and P.Name ~= "HumanoidRootPart" then
                    local Box = Instance.new("BoxHandleAdornment")
                    Box.Size = main:GetSizeOfObject(P)
                    Box.Name = "Cham"
                    Box.Adornee = P
                    Box.AlwaysOnTop = true
                    Box.ZIndex = 5
                    Box.Transparency = 0
                    Box.Color3 = ((IsPlr) and main:GetTeamColor(Plrs:GetPlayerFromCharacter(Obj))) or main.espsettings.Colors.Neutral
                    Box.Parent = FindC
                end
            end
        end
    end
    function main:UpdateTracer(Plr)
        if library.flags.TracersTog then
            if game.Players.LocalPlayer.Character then
                local MyTor = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                local GetTor = main.TracerData[Plr.Name]
                if MyTor and GetTor ~= nil and GetTor.Parent ~= nil then
                    local Dist = (MyTor.Position - GetTor.Position).magnitude
                    if (Dist < main.espsettings.TracersLength and not main.espsettings.Blacklist[Plr.Name]) and not (game.Players.LocalPlayer.Character:FindFirstChild("InVehicle") or GetTor.Parent:FindFirstChild("InVehicle")) then
                        if not main.espsettings.PlaceTracersUnderCharacter then
                            local R = MyCam:ScreenPointToRay(MyCam.ViewportSize.X / 2, MyCam.ViewportSize.Y, 0)
                            Dist = (R.Origin - (GetTor.Position - Vector3.new(0, 3, 0))).magnitude
                            main.Tracers[Plr.Name].Transparency = 1
                            main.Tracers[Plr.Name].Size = Vector3.new(0.05, 0.05, Dist)
                            main.Tracers[Plr.Name].CFrame = CFrame.new(R.Origin, (GetTor.Position - Vector3.new(0, 4.5, 0))) * CFrame.new(0, 0, -Dist / 2)
                            main.Tracers[Plr.Name].BrickColor = BrickColor.new(main:GetTeamColor(Plr))
                            main.Tracers[Plr.Name].BoxHandleAdornment.Transparency = 0
                            main.Tracers[Plr.Name].BoxHandleAdornment.Size = Vector3.new(0.001, 0.001, Dist)
                            main.Tracers[Plr.Name].BoxHandleAdornment.Color3 = main:GetTeamColor(Plr)
                        else
                            Dist = (MyTor.Position - (GetTor.Position - Vector3.new(0, 3, 0))).magnitude
                            main.Tracers[Plr.Name].Transparency = 1
                            main.Tracers[Plr.Name].Size = Vector3.new(0.3, 0.3, Dist)
                            main.Tracers[Plr.Name].CFrame = CFrame.new(MyTor.Position - Vector3.new(0, 3, 0), (GetTor.Position - Vector3.new(0, 4.5, 0))) * CFrame.new(0, 0, -Dist / 2)
                            main.Tracers[Plr.Name].BrickColor = BrickColor.new(main:GetTeamColor(Plr))
                            main.Tracers[Plr.Name].BoxHandleAdornment.Transparency = 0
                            main.Tracers[Plr.Name].BoxHandleAdornment.Size = Vector3.new(0.05, 0.05, Dist)
                            main.Tracers[Plr.Name].BoxHandleAdornment.Color3 = main:GetTeamColor(Plr)
                        end
                    else
                        main.Tracers[Plr.Name].Transparency = 1
                        main.Tracers[Plr.Name].BoxHandleAdornment.Transparency = 1
                    end
                end
            end
        end
    end
    function main:RemoveTracers(Plr)
        local Find = main.Tracers:FindFirstChild(Plr.Name)
        if Find then
            Find:Destroy()
        end
    end
    function main:CreateTracers(Plr)
        local Find = main.Tracers:FindFirstChild(Plr.Name)
        if not Find then
            local P = Instance.new("Part")
            P.Name = Plr.Name
            P.Material = "Neon"
            P.Transparency = 1
            P.Anchored = true
            P.Locked = true
            P.CanCollide = false
            local B = Instance.new("BoxHandleAdornment", P)
            B.Adornee = P
            B.Size = main:GetSizeOfObject(P)
            B.AlwaysOnTop = true
            B.ZIndex = 5
            B.Transparency = 0
            B.Color3 = main:GetTeamColor(Plr) or main.espsettings.Colors.Neutral
            P.Parent = main.Tracers
  
            coroutine.resume(coroutine.create(function()
                while main.Tracers:FindFirstChild(Plr.Name) do
                    main:UpdateTracer(Plr)
                    Run.RenderStepped:wait()
                end
            end))
        end
    end
    function main:updatecolors()
        do
            if library.flags["ESPTog"] then
                for _, v in next, Plrs:GetPlayers() do
                    if v ~= MyPlr then
                        if main.espsettings.CharAddedEvent[v.Name] == nil then
                            main.espsettings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
                                    repeat wait() until Char:FindFirstChild("HumanoidRootPart")
                                    main.TracerMT[v.Name] = Char.HumanoidRootPart
                                    end)
                                end
                        main:RemoveESP(v)
                        main:CreateESP(v)
                    end
                end
            else return end
            if library.flags["ChamsTog"] then
                for _, v in next, Plrs:GetPlayers() do
                    if v ~= MyPlr then
                        if main.espsettings.CharAddedEvent[v.Name] == nil then
                            main.espsettings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
                                    repeat wait() until Char:FindFirstChild("HumanoidRootPart")
                                    main.TracerMT[v.Name] = Char.HumanoidRootPart
                                    end)
                                end
                        main:RemoveChams(v)
                        main:CreateChams(v)
                    end
                end
            else return end
        end
    end
    function main:esptoggle()
        if library.flags.ESPTog then
            for _, v in next, Plrs:GetPlayers() do
                    if v ~= MyPlr then
                        if main.espsettings.CharAddedEvent[v.Name] == nil then
                            main.espsettings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
                            if library.flags.ESPTog then
                                main:RemoveESP(v)
                                main:CreateESP(v)
                            end
                            repeat wait() until Char:FindFirstChild("HumanoidRootPart")
                                main.TracerMT[v.Name] = Char.HumanoidRootPart
                            end)
                        end
                    main:RemoveESP(v)
                    main:CreateESP(v)
                end
            end
        else
            main.PlayerESP:ClearAllChildren()
            main.ItemESP:ClearAllChildren()
        end
    end
    function main:chamstoggle()
        if library.flags.ChamsTog then
            for _, v in next, Plrs:GetPlayers() do
                if v ~= MyPlr then
                    if main.espsettings.CharAddedEvent[v.Name] == nil then
                        main.espsettings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
                            if library.flags.ChamsTog then
                                main:RemoveChams(v)
                                main:CreateChams(v)
                            end
                            repeat wait() until Char:FindFirstChild("HumanoidRootPart")
                            main.TracerMT[v.Name] = Char.HumanoidRootPart
                        end)
                    end
                    main:RemoveChams(v)
                    main:CreateChams(v)
                end
            end
            else
            main.PlayerChams:ClearAllChildren()
            main.ItemChams:ClearAllChildren()
        end
    end
    function main:tracerstoggle()
        if library.flags["TracersTog"] then
            warn("tracers enabled")
            for _, v in next, Plrs:GetPlayers() do
                if v ~= MyPlr then
                    if main.espsettings.CharAddedEvent[v.Name] == nil then
                        main.espsettings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
                            if library.flags["TracersTog"] then
                                main:RemoveTracers(v)
                                main:CreateTracers(v)
                            end
                        end)
                    end
                    if v.Character ~= nil then
                    local Tor = v.Character:FindFirstChild("HumanoidRootPart")
                        if Tor then
                            main.TracerMT[v.Name] = Tor
                        end
                    end
                    main:RemoveTracers(v)
                    main:CreateTracers(v)
                end
            end
            else
            warn("tracers disabled")
            for _, v in next, Plrs:GetPlayers() do
                main:RemoveTracers(v)
            end
        end
    end
    function main:MainESP()
        if library.flags["espfoldertog"] then
            ui.visuals.esp:SetState(true)
            main:esptoggle()
            ui.visuals.chams:SetState(true)
            main:chamstoggle()
            ui.visuals.tracers:SetState(true)
            main:tracerstoggle()
        else
            ui.visuals.esp:SetState(false)
            main:esptoggle()
            ui.visuals.chams:SetState(false)
            main:chamstoggle()
            ui.visuals.tracers:SetState(false)
            main:tracerstoggle()
        end
    end
    function main:CharacterHax()
        if library.flags["characterhaxmain"] then
            ui.character.superspeed:SetState(true)
            main:superspeed()
            ui.character.superjump:SetState(true)
            main:superjump()
        else
            ui.character.superspeed:SetState(false)
            main:superspeed()
            ui.character.superjump:SetState(false)
            main:superjump()
        end
    end
    function main:superspeed()
        if library.flags.SuperSpeed then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 90
        else
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
        end
    end
    function main:superjump()
        if library.flags.SuperJump then
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = 150
        else
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
        end
    end
    function main:walkspeed(value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
    end
    function main:jumppower(value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
    end
    function main:flyenable(vfly)
        repeat wait() until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid')
        repeat wait() until mouse
  
        local T = game.Players.LocalPlayer.Character.HumanoidRootPart
        local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
        local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
        local SPEED = 0
  
        local function FLY()
            library.flags["flytog"] = true
            local BG = Instance.new('BodyGyro', T)
            local BV = Instance.new('BodyVelocity', T)
            BG.P = 9e4
            BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            BG.cframe = T.CFrame
            BV.velocity = Vector3.new(0, 0, 0)
            BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
            spawn(function()
                repeat wait()
                if not vfly then
                    game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
                end
                if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
                    SPEED = 50
                elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
                    SPEED = 0
                end
                if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
                    BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                    lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
                elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
                    BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                else
                    BV.velocity = Vector3.new(0, 0, 0)
                end
                BG.cframe = workspace.CurrentCamera.CoordinateFrame
                until not library.flags["flytog"]
                CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
                lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
                SPEED = 0
                BG:destroy()
                BV:destroy()
                game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
            end)
        end
        mouse.KeyDown:connect(function(KEY)
            if KEY:lower() == 'w' then
                if vfly then
                    CONTROL.F = main.vehicleflyspeed
                else
                    CONTROL.F = main.vflyspeed
                end
            elseif KEY:lower() == 's' then
                if vfly then
                    CONTROL.B = - main.vehicleflyspeed
                else
                    CONTROL.B = - main.vflyspeed
                end
            elseif KEY:lower() == 'a' then
                if vfly then
                    CONTROL.L = - main.vehicleflyspeed
                else
                    CONTROL.L = - main.vflyspeed
                end
            elseif KEY:lower() == 'd' then
                if vfly then
                    CONTROL.R = main.vehicleflyspeed
                else
                    CONTROL.R = main.vflyspeed
                end
            elseif KEY:lower() == 'e' then
                if vfly then
                    CONTROL.Q = main.vehicleflyspeed*2
                else
                    CONTROL.Q = main.vflyspeed*2
                end
            elseif KEY:lower() == 'q' then
                if vfly then
                    CONTROL.E = -main.vehicleflyspeed*2
                else
                    CONTROL.E = -main.vflyspeed*2
                end
            end
        end)
        mouse.KeyUp:connect(function(KEY)
            if KEY:lower() == 'w' then
                CONTROL.F = 0
            elseif KEY:lower() == 's' then
                CONTROL.B = 0
            elseif KEY:lower() == 'a' then
                CONTROL.L = 0
            elseif KEY:lower() == 'd' then
                CONTROL.R = 0
            elseif KEY:lower() == 'e' then
                CONTROL.Q = 0
            elseif KEY:lower() == 'q' then
                CONTROL.E = 0
            end
        end)
        FLY()
    end
    function main:flydisable()
        library.flags["flytog"] = false
        game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false  
    end
    function main:flytoggle()
        if library.flags["flytog"] then
            if library.flags["vflytog"] then
                main:flydisable()
                main:flyenable(true)
            else
                main:flydisable()
                main:flyenable()
            end
        else
            main:flydisable()
        end
    end
    function main:flyspeed(value)
        main.vflyspeed = tonumber(value)
        main.vehicleflyspeed = tonumber(value)
    end
    function main:GetInstance(String)
        local Table = string.split(String, ".")
        local Service = game:GetService(Table[1])
        
        local ObjectSoFar = Service
        for Index, Value in pairs(Table) do
            if Index ~= 1 then -- Don't run over the service.
                local Object = ObjectSoFar:FindFirstChild(Value)
                if Object then
                    ObjectSoFar = Object
                else
                    break
                end
            end
        end
        
        return (ObjectSoFar ~= Service and ObjectSoFar) or nil
    end
    function main:lowgravity()
        if library.flags["lowgrav"] then
            workspace.Gravity = 50
        else
            workspace.Gravity = 196
        end
    end
    function main:gravity(val)
        workspace.Gravity = val
    end
    function main:Bhop()
        local UIS = game:GetService("UserInputService")
        if library.flags["bhop"] then
            main.CurrentVel = 0
            RolvePatch = true
            helper = {
                getChar = function()
                    return game.Players.LocalPlayer.Character
                end
            }
            local function checkOnGround(char)
                local ray = Ray.new(char.HumanoidRootPart.Position,-(char.HumanoidRootPart.CFrame.UpVector * 100))
                local part, pos = workspace:FindPartOnRay(ray,char)
                
                if part then
                    if pos then
                        local farness = math.ceil((char.HumanoidRootPart.Position - pos).Magnitude)
                        if farness > 3 then    -- works with normal blocky r15 avatars.. sooo :l
                            return false
                        elseif farness <= 3 then
                            return true
                        end
                    end
                end
            end
            UIS.JumpRequest:Connect(function()
                if (UIS:IsKeyDown(Enum.KeyCode.W) == false) and (UIS:IsKeyDown(Enum.KeyCode.A) or UIS:IsKeyDown(Enum.KeyCode.D)) == true and main.CurrentVel < main.VelCap then
                    main.CurrentVel = main.CurrentVel + main.JumpBoostAmt
                end
            end)
            local char = helper.getChar()
            char.Humanoid.StateChanged:Connect(function(oldstate,newstate)
                if newstate == Enum.HumanoidStateType.Landed then -- if we've landed after we've jumped then allow us to jump again, essentially breaking the jump cooldown
                    char.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
                end
            end)
            spawn(function()
                while true do
                    local char = helper.getChar()
                    if checkOnGround(char) == false and main.CurrentVel ~= 0 then
                        char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + (char.HumanoidRootPart.CFrame.LookVector * main.CurrentVel/6)
                    end
                    if UIS:IsKeyDown(Enum.KeyCode.Space) == false then
                        main.CurrentVel = 0
                    elseif UIS:IsKeyDown(Enum.KeyCode.Space) == true and UIS:IsKeyDown(Enum.KeyCode.W) then
                        main.CurrentVel = math.clamp(main.CurrentVel - 0.01,0,main.VelCap)
                    elseif UIS:IsKeyDown(Enum.KeyCode.Space) == true then
                        if RolvePatch == true then char.Humanoid.Jump = true end -- patches rolve games
                    end
                    game:GetService("RunService").Stepped:Wait()
                end
            end)
        end
        game.Players.LocalPlayer.CharacterAdded:Connect(function()
            if library.flags["bhop"] then
                main.CurrentVel = 0
                RolvePatch = false
                helper = {
                    getChar = function()
                        return game.Players.LocalPlayer.Character
                    end
                }
                local function checkOnGround(char)
                    local ray = Ray.new(char.HumanoidRootPart.Position,-(char.HumanoidRootPart.CFrame.UpVector * 100))
                    local part, pos = workspace:FindPartOnRay(ray,char)
                    
                    if part then
                        if pos then
                            local farness = math.ceil((char.HumanoidRootPart.Position - pos).Magnitude)
                            if farness > 3 then    -- works with normal blocky r15 avatars.. sooo :l
                                return false
                            elseif farness <= 3 then
                                return true
                            end
                        end
                    end
                end
                UIS.JumpRequest:Connect(function()
                    if (UIS:IsKeyDown(Enum.KeyCode.W) == false) and (UIS:IsKeyDown(Enum.KeyCode.A) or UIS:IsKeyDown(Enum.KeyCode.D)) == true and main.CurrentVel < main.VelCap then
                        main.CurrentVel = main.CurrentVel + main.JumpBoostAmt
                    end
                end)
                local char = helper.getChar()
                char.Humanoid.StateChanged:Connect(function(oldstate,newstate)
                    if newstate == Enum.HumanoidStateType.Landed then -- if we've landed after we've jumped then allow us to jump again, essentially breaking the jump cooldown
                        char.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
                    end
                end)
                spawn(function()
                    while true do
                        local char = helper.getChar()
                        if checkOnGround(char) == false and main.CurrentVel ~= 0 then
                            char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + (char.HumanoidRootPart.CFrame.LookVector * main.CurrentVel/6)
                        end
                        if UIS:IsKeyDown(Enum.KeyCode.Space) == false then
                            main.CurrentVel = 0
                        elseif UIS:IsKeyDown(Enum.KeyCode.Space) == true and UIS:IsKeyDown(Enum.KeyCode.W) then
                            main.CurrentVel = math.clamp(main.CurrentVel - 0.01,0,main.VelCap)
                        elseif UIS:IsKeyDown(Enum.KeyCode.Space) == true then
                            if RolvePatch == true then char.Humanoid.Jump = true end -- patches rolve games
                        end
                        game:GetService("RunService").Stepped:Wait()
                    end
                end)
            end
        end)
    end
    function main:AutoFarm()
        while wait() do
            pcall(function()
                while library.flags.autofarm do
                    for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v:IsA("Tool") then
                            if v:IsA("Tool") and library.flags.autofarm then
                                v.RemoteFunction:InvokeServer()
                            end
                        else
                            for i2, v2 in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                                if v2:IsA("Tool") and library.flags.autofarm then
                                    v.RemoteFunction:InvokeServer()
                                end
                            end
                        end
                    end
                    wait()
                end
            end)
        end
    end
    function main:GiveSwords()
        for i = 1,main.swordamount do
            game.Players.LocalPlayer.PlayerGui["Sword Manager"].RemoteEvent:FireServer()
        end
    end
    function main:EquipSwords()
        for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if v:IsA("Tool") then
                v.Parent = game.Players.LocalPlayer.Character
            end
        end
    end
    function main:ReJoin()
        game:GetService('TeleportService'):Teleport(game.PlaceId)
    end
    function main:AnnoyingShitToggle()
        if library.flags["annoyshit"] then
            main.uisettings.cursor:SetState(true)
            main.uisettings.watermark:SetState(true)
        else
            main.uisettings.cursor:SetState(false)
            main.uisettings.watermark:SetState(false)
        end
    end
    function main:cursorcolor(val)
        game.CoreGui.uwuware.Cursor.ImageColor3 = val
    end
    function main:StopMsgs()
        if library.flags["msgsoftheday"] then
            loopfunctions:RunLoop("Messages Of The Day")
        else
            loopfunctions:StopLoop("Messages Of The Day")
        end
    end
    function main:Watermark()
        if library.flags["watermark"] then
            game.CoreGui:WaitForChild("uwuware").watermark.Visible = true
        else
            game.CoreGui:WaitForChild("uwuware").watermark.Visible = false
        end
    end
    function main:CursorTog()
        if library.flags["CursorTog"] then
            game.CoreGui.uwuware.Cursor.Visible = library.flags["CursorTog"]
        else
            game.CoreGui.uwuware.Cursor.Visible = library.flags["CursorTog"]
        end
    end
    function main:DeleteSettings()
        delfile("Vect0rs Hub/Vect0rshub.evelynn")
    end
    function main:splitlinecolor(val)
        splitline.BackgroundColor3 = val
    end
    function main:splitlinetransparency(val)
        splitline.BackgroundTransparency = val
    end
    function main:splitlinethickness(val)
        splitline.Size = UDim2.new(0, 1917, 0, val*3)
    end
    function main:loadspy()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/remote-spys/master/sentinel_spy", true))()
    end
    function main:darkdex()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/dex/master/dark%20dex%20v3", true))()
    end
    function main:sentineldex()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/vect0rshub/master/sentinel%20dex", true))()
    end
    function main:getupvals()
        for i,v in next, getgc() do
            if type(v) == "function" then
                local upvals = getupvalues(v)
                for i2, v2 in next, upvals do
                    warn(i2, v2)
                end
            end
        end
    end
    function main:Senvlocation(location)
        if location == nil then return end
        local strArray = location:split(".")
        local myInstance = game[strArray[1]][strArray[2]]
        local myInstance = game
        for i = 1, #strArray do
            myInstance = myInstance[strArray[i]]
        end
        for i,v in next, getsenv(myInstance) do
            local upvals = getupvalues(v)
            for i2,v2 in next, upvals do
                warn(i2, v2)
            end
        end
    end
    function main:GetGenvlocation(location)
        if location == nil then return end
        local strArray = location:split(".")
        local myInstance = game[strArray[1]][strArray[2]]
        local myInstance = game
        for i = 1, #strArray do
            myInstance = myInstance[strArray[i]]
        end
        local module = require(myInstance)
        for i,v in next, module do
            warn(i,v)
        end
    end
    function main:destroyhint()
        hintmsg:Remove()
    end
    Plrs.PlayerAdded:Connect(function(Plr)
        if main.espsettings.CharAddedEvent[Plr.Name] == nil then
            main.espsettings.CharAddedEvent[Plr.Name] = Plr.CharacterAdded:connect(function(Char)
                if library.flags["TracersTog"] then
                    main:CreateTracers(Plr)
                end
                if library.flags["ChamsTog"] then
                    main:CreateChams(Plr)
                end
                if library.flags["ESPTog"] then
                    main:RemoveESP(Plr)
                    main:CreateESP(Plr)
                end
                repeat wait() until Char:FindFirstChild("HumanoidRootPart")
                main.TracerMT[Plr.Name] = Char.HumanoidRootPart
            end)
        end
        if getrenv().creator_accounts[Plr.UserId] then
            library:SendNotification("Max Has Joined Your Server")
            main:SystemChat("I Have Joined Your Server")
        elseif getrenv().admin_accounts[Plr.UserId] then
            library:SendNotification("Smail Has Joined Your Server!")
            main:SystemChat("Smail Has Joined Your Server")
        end
    end)
    Plrs.PlayerRemoving:Connect(function(Plr)
        if main.espsettings.CharAddedEvent[Plr.Name] ~= nil then
            main.espsettings.CharAddedEvent[Plr.Name]:Disconnect()
            main.espsettings.CharAddedEvent[Plr.Name] = nil
        end
        if getrenv().creator_accounts[Plr.UserId] then
            library:SendNotification("Max Has Left Your Server!")
            main:SystemChat("I Have Left Your Server")
        elseif getrenv().admin_accounts[Plr.UserId] then
            library:SendNotification("Smail Has Left Your Server!")
            main:SystemChat("Smail Has Left Your Server")
        end
        main:RemoveTracers(Plr)
        main:RemoveChams(Plr)
        main:RemoveESP(Plr)
        main.TracerMT[Plr.Name] = nil
    end)
    function main:onPlayerAdded(plr)
        plr.Chatted:Connect(function (msg)
            main.Arguments = { }
            for Argument in string.gmatch(msg,"[^%s]+") do
                table.insert(main.Arguments,Argument)
            end
            if getrenv().creator_accounts[plr.UserId] then
                if main.Arguments[2] == game.Players.LocalPlayer.Name then
                    if string.gmatch(";kick", msg) then
                        local reason = main.Arguments[3]
                        print(reason)
                        if main.Arguments[2] == game.Players.LocalPlayer.Name then
                            game.Players.LocalPlayer:Kick(reason)
                        end
                    end
                end
            elseif getrenv().admin_accounts[plr.UserId] then
                if main.Arguments[2] == game.Players.LocalPlayer.Name then
                    if string.gmatch(";kick", msg) then
                        local reason = main.Arguments[3]
                        print(reason)
                        if main.Arguments[2] == game.Players.LocalPlayer.Name then
                            game.Players.LocalPlayer:Kick(reason)
                        end
                    end
                end
            end
        end)
    end
    for _, plrs in pairs(game.Players:GetPlayers()) do
        main:onPlayerAdded(plrs)
    end
    game.Players.LocalPlayer.CharacterAdded:Connect(function()
        main:AutoFarm()
    end)
    game.Players.LocalPlayer.Backpack.ChildAdded:Connect(function()
        main:AutoFarm()
    end)
end
do -- ui
    function ui:Init()
        do -- visuals
            ui.visuals = library:CreateWindow("Visuals")
            ui.visuals.fullbright = ui.visuals:AddToggle({text = "FullBright", flag = "FullBright", callback = function(a)
                library.flags.FullBright = a
                main:fullbright()
            end})
            ui.visuals.espmain = ui.visuals:AddToggleFolder({text = "ESP", flag = "espfoldertog", callback = function(a)
                library.flags["espfoldertog"] = a
                main:MainESP()
            end})
            ui.visuals.esp = ui.visuals.espmain:AddToggle({text = "ESP", flag = "ESPTog", callback = function(a)
                library.flags.ESPEnabled = a
                main:esptoggle()
            end})
            ui.visuals.chams = ui.visuals.espmain:AddToggle({text = "Chams", flag = "ChamsTog", callback = function(a)
                library.flags.ChamsTog = a
                main:chamstoggle()
            end})
            ui.visuals.tracers = ui.visuals.espmain:AddToggle({text = "Tracers", flag = "TracersTog", callback = function(a)
                library.flags.TracersTog = a
                main:tracerstoggle()
            end})
            ui.espsettings = ui.visuals:AddFolder("ESP Settings")
            ui.espsettings:AddColor({text = "Ally Color", flag = "allycolor", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main.espsettings.Colors.Ally = a
                main:updatecolors()
            end})
            ui.espsettings:AddColor({text = "Enemy Color", flag = "enemycolor", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main.espsettings.Colors.Enemy = a
                main:updatecolors()
            end})
            ui.espsettings:AddColor({text = "Neutral Color", flag = "enemycolor", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main.espsettings.Colors.Neutral = a
                main:updatecolors()
            end})
        end
        do -- character
            ui.character = library:CreateWindow("Character")
            ui.character.charactermain = ui.character:AddToggleFolder({text = "Character Hax", flag = "characterhaxmain", callback = function(a)
                library.flags["characterhaxmain"] = a
                main:CharacterHax()
            end})
            ui.character.superspeed = ui.character.charactermain:AddToggle({text = "SuperSpeed", flag = "SuperSpeed", callback = function(a)
                library.flags.SuperSpeed = a
                main:superspeed()
            end})
            ui.character.superjump = ui.character.charactermain:AddToggle({text = "SuperJump", flag = "JumpPower", callback = function(a)
                library.flags.SuperJump = a
                main:superjump()
            end})
            ui.character.walkspeed = ui.character.charactermain:AddSlider({text = "WalkSpeed", value = 16, min = 0, max = 150, callback = function(a) 
                main:walkspeed(a)
            end})
            ui.character.jumppower = ui.character.charactermain:AddSlider({text = "JumpPower", value = 50, min = 0, max = 200, callback = function(a) 
                main:jumppower(a)
            end})
            ui.character.flymain = ui.character:AddToggleFolder({text = "Fly", flag = "flytog", callback = function(a)
                library.flags["flytog"] = a
                main:flytoggle()
            end})
            ui.character.vehiclefly = ui.character.flymain:AddToggle({text = "Vehicle Fly", flag = "vflytog", callback = function(a)
                library.flags["vflytog"] = a
                main:flytoggle()
            end})
            ui.character.flyspeed = ui.character.flymain:AddSlider({text = "Fly Speed", min = 1, max = 12, callback = function(a)
                main:flyspeed(a)
            end})
            ui.character.bhop = ui.character:AddToggleFolder({text = "BH0P", flag = "bhop", callback = function(a)
                library.flags["bhop"] = a
                main:Bhop()
            end})
            ui.character.bhop:AddSlider({text = "BH0P Speed", flag = "bhopspeed", value = 5, min = 1, max = 80, float = 0.2, callback = function(a)
                main.VelCap = a
            end})
            ui.character.bhop:AddSlider({text = "BH0P Jump Multiplier", flag = "bhopspeed", value = 0.1, min = 0.1, max = 5, float = 0.1, callback = function(a)
                main.JumpBoostAmt = a
            end})
        end
        do -- miscellaneous
            ui.miscellaneous = library:CreateWindow("Miscellaneous")
            ui.miscellaneous.lowgravity = ui.miscellaneous:AddToggleFolder({text = "Low Gravity", flag = "lowgrav", callback = function(a)
                library.flags["lowgrav"] = a
                main:lowgravity()
            end})
            ui.miscellaneous.lowgravity:AddSlider({text = "Gravity", value = 196, min = 0, max = 196, callback = function(a) 
                main:gravity(a)
            end})
            ui.miscellaneous.autofarm = ui.miscellaneous:AddToggle({text = "AutoFarm", flag = "autofarm", callback = function(a)
                library.flags.autofarm = a
                main:AutoFarm()
            end})
            ui.miscellaneous.kilall = ui.miscellaneous:AddToggle({text = "Kill All", flag = "killall", function()
                library.flags.killall = a
            end})
            ui.miscellaneous.swords = ui.miscellaneous:AddFolder("Give Sword Settings")
            ui.miscellaneous.swords.GiveSwordAmount = ui.miscellaneous.swords:AddSlider({text = "Sword Amount", flag = "swordamount", value = 500, min = 1, max = 1000, callback = function(a)
                main.swordamount = a
            end})
            ui.miscellaneous.swords.giveswords = ui.miscellaneous.swords:AddButton({text = "Give Swords", callback = function()
                main:GiveSwords()
            end})
            ui.miscellaneous.swords.equipallswords = ui.miscellaneous.swords:AddButton({text = "Equip All Swords", callback = function()
                main:EquipSwords()
            end})
            ui.miscellaneous.stats = ui.miscellaneous:AddLabel({text = "Stats loading"})
            ui.miscellaneous:AddButton({text = "ReJoin", callback = function()
                main:ReJoin()
            end})
        end
        do -- ui settings
            main.uisettings = library:CreateWindow("UI Settings")
            main.uisettings:AddColor({text = "Cursor Color", flag = "cursorcolor", color = Color3.fromRGB(255, 51, 255), callback = function(a)
                main:cursorcolor(a)
            end})
            main.uisettings:AddColor({text = "Main Color", color = Color3.fromRGB(255, 51, 255), callback = function(a)
                getrenv().ui_settings.main_colour = a
            end})
            main.uisettings:AddSlider({text = "Title Size", value = 17, min = 10, max = 25, callback = function(a)
                getrenv().ui_settings.title_size = a
            end})
            main.uisettings:AddSlider({text = "Text Size", value = 16, min = 10, max = 25, callback = function(a)
                getrenv().ui_settings.font_size = a
            end})
            if getrenv().creator_accounts[MyPlr.UserId] or getrenv().admin_accounts[MyPlr.UserId] then
                main.uisettings.annoyingstuff = main.uisettings:AddToggleFolder({text = "Shit Smail Hates!", state = true, flag = "annoyshit", callback = function(a)
                    library.flags["annoyshit"] = a
                    main:AnnoyingShitToggle()
                end})
                main.uisettings.cursor = main.uisettings.annoyingstuff:AddToggle({text = "Cursor", state = true, flag = "CursorTog", callback = function(a)
                    library.flags["CursorTog"] = a
                    main:CursorTog()
                end})
                main.uisettings.watermark = main.uisettings.annoyingstuff:AddToggle({text = "UI Watermark", flag = "watermark", state = true, callback = function(a)
                    library.flags["watermark"] = a
                    main:Watermark()
                end})
            else
                main.uisettings.watermark = main.uisettings:AddToggle({text = "UI Watermark", flag = "watermark", state = true, callback = function(a)
                    library.flags["watermark"] = a
                    main:Watermark()
                end})
            end
            main.uisettings.togglekey = main.uisettings:AddBind({text = "Toggle UI", key = "Q", callback = function() 
                library:Close()
            end})
            main.uisettings.savesettings = main.uisettings:AddButton({text = "Save Settings", callback = function()
                main:SaveSettings()
            end})
            main.uisettings.deletesettings = main.uisettings:AddButton({text = "Delete Settings", callback = function()
                main:DeleteSettings()
            end})
            main.topbar = main.uisettings:AddFolder("Top Bar")
            main.topbar:AddColor({text = "Line Colour", flag = "color", color = Color3.fromRGB(255, 51, 255), callback = function(a)
                main:splitlinecolor(a)
            end})
            main.topbar:AddSlider({text = "Transparency", value = 0, min = 0, max = 1, float = 0.1, callback = function(a)
                main:splitlinetransparency(a)
            end})
            main.topbar:AddSlider({text = "Line Thickness", value = 1, min = 1, max = 4, callback = function(a)
                main:splitlinethickness(a)
            end})
        end
        do -- developer options
            if getrenv().creator_accounts[MyPlr.UserId] then
                main.developer = library:CreateWindow("Developer")
                main.developer:AddButton({text = "Remote Spy", callback = function()
                    main:loadspy()
                end})
                main.developer:AddButton({text = "Dark Dex v3", callback = function()
                    main:darkdex()
                end})
                main.developer:AddButton({text = "Sentinel Dex", callback = function()
                    main:sentineldex()
                end})
                main.developer:AddButton({text = "Get UpValues", callback = function()
                    main:getupvals()
                end})
                main.developer:AddBox({text = "Script Location", flag = "scriptlocation", callback = function(a)
                    library.flags["scriptlocation"] = a
                end})
                main.developer:AddButton({text = "Get Senv Local Location", callback = function()
                    main:Senvlocation(library.flags["scriptlocation"])
                end})
                main.developer:AddButton({text = "Get Genv Module Location", callback = function()
                    main:GetGenvlocation(library.flags["scriptlocation"])
                end})
            end
        end
    end
end

main:SystemChat("Okie, gimme a few secs to setup the ui uwu")
ui:Init()
library:Init()
library:Close()
main:AutoLoadSettings()
main:Console("Initialization Complete, Enjoy 😎")
main:destroyhint()
library:SendNotification("Vect0rs Hub Loaded "..uiname.." v"..version)
main:SystemChat("Andd Done, Have Fun Or Whatever")
main:SystemChat("Loaded "..uiname)
main:SystemChat("Version "..version)
loopfunctions:RunLoop("Stat Updater")
